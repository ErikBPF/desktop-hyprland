- name: make XDG compliant folders
  command: "{{ item }}"
  become: True
  with_items:
    - xdg-user-dirs-update
    - echo >> /etc/profile
    - echo 'export XDG_CONFIG_HOME="$HOME/.config"' >> /etc/profile
    - echo 'export XDG_CACHE_HOME="$HOME/.cache"' >> /etc/profile
    - echo 'export XDG_DATA_HOME="$HOME/.local/share"' >> /etc/profile
    - echo 'export XDG_STATE_HOME="$HOME/.local/state"' >> /etc/profile
    - echo 'export GOPATH="$XDG_DATA_HOME/go"' >> /etc/profile
    - echo 'export CARGO_HOME="$XDG_DATA_HOME/cargo"' >> /etc/profile
    - echo 'export LESSHISTFILE="$XDG_CONFIG_HOME/less/history"' >> /etc/profile
    - echo 'export LESSKEY="$XDG_CONFIG_HOME/less/keys"' >> /etc/profile
    - echo 'export NPM_CONFIG_USERCONFIG="$XDG_CONFIG_HOME/npm"' >> /etc/profile

- name: make hyprland config folder
  tags:
    - full-install
    - users
  file:
    path: "{{ lookup('env', 'HOME') }}/.config/hyprland"
    recurse: yes
    state: directory

- name: copy hyprland files
  tags:
    - full-install
    - users
  copy: src={{ item.src }} dest={{ item.dest }}

  with_items:
    - {
        src: "hypr/",
        dest: "{{ lookup('env', 'HOME') }}/.config/hypr/",
        mode: 0755,
      }

- name: make fish config folder
  tags:
    - full-install
    - users
  file:
    path: "{{ lookup('env', 'HOME') }}/.config/fish"
    recurse: yes
    state: directory

- name: copy fish files
  tags:
    - full-install
    - users
  copy: src={{ item.src }} dest={{ item.dest }}
  with_items:
    - { src: "fish/ftc.fish", dest: "/usr/share/doc/find-the-command/ftc.fish" }
    - { src: "fish/", dest: "{{ lookup('env', 'HOME') }}/.config/fish/" }

- name: make kitty config folder
  tags:
    - full-install
    - users
  file:
    path: "{{ lookup('env', 'HOME') }}/.config/kitty"
    recurse: yes
    state: directory

- name: copy kitty files
  tags:
    - full-install
    - users
  copy: src={{ item.src }} dest={{ item.dest }}
  with_items:
    - { src: "kitty/", dest: "{{ lookup('env', 'HOME') }}/.config/kitty/" }

- name: make flameshot config folder
  tags:
    - full-install
    - users
  file:
    path: "{{ lookup('env', 'HOME') }}/.config/flameshot"
    recurse: yes
    state: directory

- name: copy flameshot files
  tags:
    - full-install
    - users
  copy: src={{ item.src }} dest={{ item.dest }}
  with_items:
    - {
        src: "flameshot/",
        dest: "{{ lookup('env', 'HOME') }}/.config/flameshot/",
      }

- name: make btop config folder
  tags:
    - full-install
    - users
  file:
    path: "{{ lookup('env', 'HOME') }}/.config/btop/themes"
    recurse: yes
    state: directory

- name: copy btop files
  tags:
    - full-install
    - users
  copy: src={{ item.src }} dest={{ item.dest }}
  with_items:
    - {
        src: "btop/themes/dracula.theme",
        dest: "{{ lookup('env', 'HOME') }}/.config/btop/themes/dracula.theme",
      }
    - {
        src: "btop/btop.conf",
        dest: "{{ lookup('env', 'HOME') }}/.config/btop/btop.conf",
      }

- name: make wofi config folder
  tags:
    - full-install
    - users
  file:
    path: "{{ lookup('env', 'HOME') }}/.config/wofi"
    recurse: yes
    state: directory

- name: copy wofi files
  tags:
    - full-install
    - users
  copy: src={{ item.src }} dest={{ item.dest }}
  with_items:
    - { src: "wofi/", dest: "{{ lookup('env', 'HOME') }}/.config/wofi/" }

- name: make waybar config folder
  tags:
    - full-install
    - users
  file:
    path: "{{ lookup('env', 'HOME') }}/.config/waybar"
    recurse: yes
    state: directory

- name: copy waybar files
  tags:
    - full-install
    - users
  copy: src={{ item.src }} dest={{ item.dest }}
  with_items:
    - {
        src: "waybar/",
        dest: "{{ lookup('env', 'HOME') }}/.config/waybar/",
        mode: 0755,
      }

- name: make wlogout config folder
  tags:
    - full-install
    - users
  file:
    path: "{{ lookup('env', 'HOME') }}/.config/wlogout"
    recurse: yes
    state: directory

- name: copy wlogout files
  tags:
    - full-install
    - users
  copy: src={{ item.src }} dest={{ item.dest }}
  with_items:
    - { src: "wlogout/", dest: "{{ lookup('env', 'HOME') }}/.config/wlogout/" }

- name: make swaylock config folder
  tags:
    - full-install
    - users
  file:
    path: "{{ lookup('env', 'HOME') }}/.config/swaylock"
    recurse: yes
    state: directory

- name: copy swaylock files
  tags:
    - full-install
    - users
  copy: src={{ item.src }} dest={{ item.dest }}
  with_items:
    - {
        src: "swaylock/",
        dest: "{{ lookup('env', 'HOME') }}/.config/swaylock/",
      }

- name: make sdt config folder
  tags:
    - full-install
    - users
  file:
    path: "/usr/share/sddm/themes/sdt"
    recurse: yes
    state: directory
  become: true

- name: copy sdt files
  tags:
    - full-install
    - users
  copy: src={{ item.src }} dest={{ item.dest }}
  with_items:
    - {
        src: "sdt/",
        dest: "/usr/share/sddm/themes/sdt",
        owner: erik,
        group: erik,
      }
  become: true

- name: make sddm config folder
  tags:
    - full-install
    - users
  file:
    path: "/etc/sddm.conf.d"
    recurse: yes
    state: directory
  become: true

- name: copy sddm config files
  tags:
    - full-install
    - users
  copy: src={{ item.src }} dest={{ item.dest }}
  become: true
  with_items:
    - { src: "sddm/", dest: "/etc/sddm.conf.d/" }

- name: copy sdt wallpaper
  tags:
    - full-install
    - users
  copy: src={{ item.src }} dest={{ item.dest }}
  become: true
  with_items:
    - {
        src: "files/sdt/wallpaper.jpg",
        dest: "/usr/share/sddm/themes/sdt/wallpaper.jpg",
      }

- name: make wayland-session config folder
  tags:
    - full-install
    - users
  file:
    path: "/usr/share/wayland-sessions"
    recurse: yes
    state: directory
  become: true

- name: copy wayland-session config files
  tags:
    - full-install
    - users
  copy: src={{ item.src }} dest={{ item.dest }}
  with_items:
    - {
        src: "hypr/extras/hyprland.desktop",
        dest: "/usr/share/wayland-sessions/",
      }
  become: true

- name: copy start-hypr file
  tags:
    - full-install
    - users
  copy: src={{ item.src }} dest={{ item.dest }}
  with_items:
    - { src: "hypr/extras/star-hypr", dest: "{ lookup('env', 'HOME') }}" }

- name: copy starship file
  tags:
    - full-install
    - users
  copy: src={{ item.src }} dest={{ item.dest }}
  with_items:
    - {
        src: "starship/starship.toml",
        dest: "{ lookup('env', 'HOME') }/.config/",
      }

- name: set gtk theme, cursor and icons
  shell: >
    xfconf-query -c xsettings -p /Net/ThemeName -s "Adwaita-dark" ;
    xfconf-query -c xsettings -p /Net/IconThemeName -s "Adwaita-dark" ;
    gsettings set org.gnome.desktop.interface gtk-theme "Adwaita-dark" ;
    gsettings set org.gnome.desktop.interface icon-theme "Adwaita-dark" ;
    gsettings set org.gnome.desktop.interface cursor-theme Vimix-cursors ;
    hyprctl setcursor Vimix-cursors 28;
